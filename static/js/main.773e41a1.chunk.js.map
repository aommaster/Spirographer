{"version":3,"sources":["CommandButton.js","Parameter.js","CurveParameter.js","ColorParameter.js","spirofunctions.js","Metric.js","Spirograph.js","TileButton.js","SpiroTile.js","Canvas.js","reportWebVitals.js","index.js"],"names":["buttonTypes","randomize","buttonText","altStyle","styles","add","clear","save","CommandButton","props","buttonType","className","onClick","callback","parameterData","text","desc","max","Parameter","useState","value","stateValue","setValue","type","updateParameter","e","target","parseInt","useEffect","window","$","tooltip","htmlFor","disabled","data-toggle","title","id","min","onChange","CurveParameter","name","checked","ColorParameter","class","gcd","a","b","randomParams","r1","Math","floor","random","r2","distance","rotation","ppc","animation","animPlaying","curveType","scale","color","stroke","x","y","generateSpiroPath","params","origin","SVGPath","angleStep","PI","numPoints","angle","parseFloat","radiusDifference","radiusSum","radiusDifferenceRatio","radiusSumRatio","oldPoint","cos","sin","push","i","newPoint","join","Metric","result","spiroFunctions","Spirograph","m","re","bounds","minx","miny","maxx","maxy","exec","path","dragged","setDrag","startClickPos","setStartClickPos","startSpiroPos","setStartSpiroPos","svgPoint","setSVGPoint","svgPointReference","setSVGPointReference","preserveAspectRatio","height","width","viewBox","fill","onMouseDown","clientX","clientY","spiroDiv","document","querySelector","selected","spiroSVG","style","left","top","pt","createSVGPoint","svgP","matrixTransform","getScreenCTM","inverse","onMouseMove","finalPos","Object","assign","onMouseUp","d","strokeWidth","strokeOpacity","active","play","command","stop","delete","TileButton","tileIndex","SpiroTile","selection","playing","Canvas","state","curveList","activeCurve","updateParameters","bind","addCurve","randomCurve","drawSpiro","handleClick","changeCurve","animateCurve","stopAnimation","deleteCurve","clearCanvas","saveCanvas","index","HTMLDivElement","this","animTime","pathObject","length","getTotalLength","baseStyle","strokeDasharray","strokeDashoffset","animationStyle","transition","setTimeout","removeAttribute","parameter","curveArray","modifiedCurve","setState","prevState","splice","parent","createElement","svg","createElementNS","setAttribute","forEach","pathElement","cloneNode","appendChild","attributes","blob","Blob","innerHTML","toString","element","download","href","URL","createObjectURL","click","remove","drawParams","newSVG","undefined","map","spiro","data-bs-toggle","aria-expanded","aria-controls","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.773e41a1.chunk.js","sourcesContent":["import React from 'react';\n\nconst buttonTypes={\n  randomize:{\n    buttonText:\"Random\",\n    altStyle:\"fa-dice\",\n    styles:\"btn btn-primary\"\n  },\n  add:{\n    buttonText:\"Add Curve\",\n    altStyle:\"fa-plus\",\n    styles:\"btn btn-primary\"\n  },\n  clear:{\n    buttonText:\"Clear\",\n    altStyle:\"fa-times\",\n    styles:\"btn btn-danger\"\n  },\n  save:{\n    buttonText:\"Export\",\n    altStyle:\"fa-save\",\n    styles:\"btn btn-success\"\n  }\n}\n\nfunction CommandButton(props) {\n  const {altStyle, buttonText, styles} = buttonTypes[props.buttonType];\n  return (\n    <div className=\"col-3 col-sm-12\">\n      <button className={styles + \" w-100 mb-1\"} onClick={props.callback}>\n          <i className={'buttonIcon fas fas-hover fa-2x ' + altStyle} ></i>\n          <div className=\"buttonText\">{buttonText}</div>\n        </button>\n    </div>\n  );\n}\n\nexport default CommandButton;\n","import React, {useState, useEffect} from 'react';\n\nconst parameterData={\n  'r1':{\n    text:\"Radius 1\",\n    desc:\"Radius of first gear\",\n    max: 300\n  },\n  'r2':{\n    text:\"Radius 2\",\n    desc:\"Radius of second gear\",\n    max: 300,\n  },\n  'distance':{\n    text:\"Distance\",\n    desc:\"Distance of drawing point from center of gear\",\n    max: 300,\n  },\n  'rotation':{\n    text:\"Phase\",\n    desc:\"Initial rotation of curve\",\n    max: 360,\n  },\n  'ppc':{\n    text:\"Points\",\n    desc:\"Points per curve\",\n    max: 200,\n  },\n  'animation':{\n    text:\"Animation\",\n    desc:\"Length of time the draw animation lasts\",\n    max: 60,\n  },\n  'scale':{\n    text:\"Scale %\",\n    desc:\"Overall scale factor of the curve\",\n    max: 500,\n  },\n  'stroke':{\n    text:\"Stroke\",\n    desc:\"Thickness of the curve\",\n    max: 100,\n  }\n}\n\nfunction Parameter(props) {\n  const [stateValue, setValue] = useState(props.value);\n  const {text, desc, max} = parameterData[props.type];\n\n  useEffect(() => {\n    setValue(props.value);\n    if (typeof window.$('[data-toggle=\"tooltip\"]').tooltip === \"function\"){\n      window.$('[data-toggle=\"tooltip\"]').tooltip();\n    }\n  }, [props.value])\n\n  function updateParameter(e){\n    if(e.target.value > max){\n      e.target.value = max;\n    }\n    if(e.target.value < 0){\n      e.target.value = 0;\n    }\n    setValue(e.target.value);\n    props.callback(props.type, parseInt(e.target.value));\n  }\n  return (\n    <div className=\"mb-3 col-3 col-sm-12\">\n      <div className=\"row\">\n        <div className=\"col-xl-7 col-md-12\">\n          <label htmlFor={props.type + \"Input\"} className={'col-form-label ' + (props.disabled===true ? \"text-muted\": \"\")}>{text}</label>\n          <i className={'p-1 fas fa-info-circle'} data-toggle=\"tooltip\" title={desc}></i>\n        </div>\n        <div className=\"col-xl-5 col-md-12\">\n          <input \n            type=\"number\" \n            id={props.type + \"Input\"} \n            min=\"0\" \n            max={max} \n            className=\"form-control\" \n            onChange={updateParameter} \n            value={stateValue}\n            disabled={props.disabled}/>\n        </div>\n      </div>\n      <div className=\"row\">\n          <input type=\"range\" id={props.type + \"Range\"} min=\"0\" max={max} onChange={updateParameter} value={stateValue} disabled={props.disabled}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Parameter;\n","import React from 'react';\n\n\nfunction CurveParameter(props) {\n\n  function updateParameter(e){\n    props.callback(props.type, e.target.id);\n  }\n  return (\n    <div className=\"col-4 col-sm-12 mt-2\">\n      <div className=\"custom-control custom-radio custom-control-inline\">\n        <input type=\"radio\" id=\"epi\" name=\"curveType\" className=\"custom-control-input\" checked={props.value===\"epi\"?true:false} disabled={props.disabled} onChange={updateParameter}/>\n        <label className=\"custom-control-label ms-1\" htmlFor=\"epi\">Epitrochoid</label>\n      </div>\n      <div className=\"custom-control custom-radio custom-control-inline\">\n        <input type=\"radio\" id=\"hypo\" name=\"curveType\" className=\"custom-control-input\" checked={props.value===\"hypo\"?true:false} disabled={props.disabled} onChange={updateParameter}/>\n        <label className=\"custom-control-label ms-1\" htmlFor=\"hypo\">Hypotrochoid</label>\n      </div>\n    </div>\n\n  );\n}\n\nexport default CurveParameter;\n","import React from 'react';\n\n\nfunction ColorParameter(props) {\n\n  function updateParameter(e){\n    props.callback(props.type, e.target.value);\n  }\n  return (\n    <div class=\"col-3 col-sm-12 mt-5\">\n      <input type=\"color\" id=\"curveColor\" name=\"curveColor\" className=\"custom-control-input\" disabled={props.disabled} value={props.value} onChange={updateParameter}/>\n    </div>\n\n  );\n}\n\nexport default ColorParameter;\n","export function gcd(a, b) {\r\n  if (b === 0)\r\n    return a;\r\n  else\r\n    return gcd(b, (a % b));\r\n}\r\n\r\nexport function randomParams(){\r\n  let R = Math.floor(Math.random() * 300) +1;//Radius A 500\r\n  let r = Math.floor(Math.random() * 300) +1;//Radius B 500\r\n  let d = Math.floor(Math.random() * 300) +1;//Distance 500\r\n  let u = Math.floor(Math.random() * Math.floor(361)); //Rotation only works when PPC is low\r\n  let p = 100; //Points per circle - Standardized at 100 for simple usage\r\n  let c =  Math.random() < 0.5?\"epi\":\"hypo\"; //Curve type;\r\n  let s = 10; //Scale;\r\n  let x = 0;\r\n  let y = 0;\r\n  let params = \r\n    {\r\n      r1: R,\r\n      r2: r,\r\n      distance: d,\r\n      rotation: u,\r\n      ppc: p,\r\n      animation: 5,\r\n      animPlaying: false,\r\n      curveType: c,\r\n      scale: 100,\r\n      color:'#010101', //Not exactly black because Windows color picker is bugged and won't trigger onChange events\r\n      stroke: s,\r\n      x: x,\r\n      y: y,\r\n    }\r\n  return params;\r\n}\r\n\r\nexport function generateSpiroPath(params) {\r\n  let {r1, r2, distance, rotation, ppc, curveType, scale, x, y} = params;\r\n  scale = scale / 100\r\n  let origin={\r\n    x:x/scale,\r\n    y:y/scale\r\n  }\r\n  \r\n\r\n  if (r1 ===0 || r2===0){\r\n    return \"\";\r\n  }\r\n\r\n  let SVGPath = [];\r\n  let angleStep = 2 * Math.PI / ppc;\r\n  let numRevolutions = r2/gcd(r1,r2);\r\n  let numPoints = ppc * numRevolutions\r\n  let angle = parseFloat(rotation) * Math.PI / 180;\r\n  let radiusDifference = r1 - r2;\r\n  let radiusSum = r1 + r2;\r\n  let radiusDifferenceRatio = radiusDifference/r2;\r\n  let radiusSumRatio = radiusDifference/r2;\r\n\r\n  \r\n  if(curveType===\"hypo\"){\r\n    let oldPoint ={\r\n      x: origin.x + radiusDifference * Math.cos(angle) + distance * Math.cos(angle* radiusDifferenceRatio),\r\n      y:origin.y + radiusDifference * Math.sin(angle) - distance * Math.sin(angle* radiusDifferenceRatio)\r\n    }\r\n    SVGPath.push(`M${scale * oldPoint.x}`,`${scale * oldPoint.y}`);\r\n    for(let i=0; i<numPoints; i++){\r\n      angle += angleStep;\r\n      let newPoint = {\r\n        x: origin.x + radiusDifference * Math.cos(angle) + distance * Math.cos(angle* radiusDifferenceRatio),\r\n        y: origin.y + radiusDifference * Math.sin(angle) - distance * Math.sin(angle* radiusDifferenceRatio)\r\n      } \r\n      \r\n      SVGPath.push(`L${scale * newPoint.x}`,`${scale * newPoint.y}`);\r\n      oldPoint = {\r\n        x: newPoint.x,\r\n        y: newPoint.y\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    let oldPoint ={\r\n      x: origin.x + radiusSum * Math.cos(angle) - distance * Math.cos(angle* radiusSumRatio),\r\n      y:origin.y + radiusSum * Math.sin(angle) - distance * Math.sin(angle* radiusSumRatio)\r\n    }\r\n    SVGPath.push(`M${scale * oldPoint.x}`,`${scale * oldPoint.y}`);\r\n    for(let i=0; i<numPoints; i++){\r\n      angle += angleStep;\r\n      let newPoint = {\r\n        x: origin.x + radiusSum * Math.cos(angle) - distance * Math.cos(angle* radiusSumRatio),\r\n        y: origin.y + radiusSum * Math.sin(angle) - distance * Math.sin(angle* radiusSumRatio)\r\n      } \r\n      \r\n      SVGPath.push(`L${scale * newPoint.x}`,`${scale * newPoint.y}`);\r\n      oldPoint = {\r\n        x: newPoint.x,\r\n        y: newPoint.y\r\n      }\r\n    }\r\n  }\r\n  SVGPath = SVGPath.join(\" \");\r\n  return SVGPath;\r\n}","import React from 'react';\nimport * as spiroFunctions from './spirofunctions';\n\n\nfunction Metric(props) {\n  let result = 0;\n  switch(props.type){\n    case \"GCD\":\n      result = spiroFunctions.gcd(props.params.r1, props.params.r2)\n      break;\n    default:\n      break;\n  }\n  return (\n  <div>{`${props.type}: ${result}`}</div>\n  );\n}\n\nexport default Metric;\n","import React, {useState} from 'react';\n\nfunction Spirograph(props) {\nvar re = /[a-z](-?[0-9.]*)\\s(-?[0-9.]*)/gi;\nvar m;\nlet bounds ={\n  minx:999999,\n  miny:999999,\n  maxx:-999999,\n  maxy:-999999\n}\n  do {\n      m = re.exec(props.path);\n      if (m) {\n          let x = parseFloat(m[1]);\n          let y = parseFloat(m[2]);\n          if(x > bounds.maxx){\n            bounds.maxx = x;\n          }\n          if(x < bounds.minx){\n            bounds.minx = x;\n          }\n          if(y > bounds.maxy){\n            bounds.maxy = y;\n          }\n          if(y < bounds.miny){\n            bounds.miny = y;\n          }\n      }\n  } while (m);\n  const [dragged, setDrag] = useState(()=>{\n    return false;\n  })\n  const [startClickPos, setStartClickPos] = useState(()=>{\n    return {\n      x:0,\n      y:0\n    };\n  })\n  const [startSpiroPos, setStartSpiroPos] = useState(()=>{\n    return {\n      x:0,\n      y:0\n    };\n  })\n  const [svgPoint, setSVGPoint] = useState(()=>{\n    return null;\n  })\n  const [svgPointReference, setSVGPointReference] = useState(()=>{\n    return null;\n  })\n  const func1 = (e) =>{\n    setStartClickPos({\n      x:e.clientX,\n      y:e.clientY,\n    })\n    let spiroDiv = document.querySelector(`#canvasContainer .spiro:nth-child(${props.selected})`);\n    let spiroSVG = document.querySelector(`#canvasContainer .spiro:nth-child(${props.selected}) svg`);\n    setStartSpiroPos({\n      x:!spiroDiv.style.left?0:parseInt(spiroDiv.style.left,10),\n      y:!spiroDiv.style.top?0:parseInt(spiroDiv.style.top,10),\n    })\n    const pt = spiroSVG.createSVGPoint();\n    setSVGPointReference(pt);\n    pt.x = e.clientX;\n    pt.y = e.clientY;\n    const svgP = pt.matrixTransform( spiroSVG.getScreenCTM().inverse() );\n    setSVGPoint(svgP)\n    setDrag(true);\n  }\n  const func2 = (e) =>{\n    if(dragged){\n      let spiroDiv =document.querySelector(`#canvasContainer .spiro:nth-child(${props.selected})`);\n      \n      const finalPos = {\n        left: `${e.clientX - startClickPos.x + startSpiroPos.x}px`,\n        top: `${e.clientY-startClickPos.y + startSpiroPos.y}px`\n      }\n      Object.assign(spiroDiv.style, finalPos)\n    }\n  }\n  const func3 = (e) =>{\n    if(dragged){\n      setDrag(false);\n      let spiroDiv = document.querySelector(`#canvasContainer .spiro:nth-child(${props.selected})`);\n      let spiroSVG = document.querySelector(`#canvasContainer .spiro:nth-child(${props.selected}) svg`);\n      const svgP = svgPointReference.matrixTransform( spiroSVG.getScreenCTM().inverse() );\n      props.callback(\"x\", svgPoint.x - svgP.x);\n      props.callback(\"y\", svgPoint.y - svgP.y);\n      spiroDiv.style=\"\";\n    }\n  }\n  return (\n    <div className=\"spiro position-absolute h-100 w-100\">\n      <svg className=\"overflow-visible h-100 w-100\" preserveAspectRatio=\"xMidYMid\" height=\"800\" width=\"600\" viewBox=\"-400 -400 800 800\" fill=\"none\" onMouseDown={func1} onMouseMove={func2} onMouseUp={func3}>\n        <path d={`${props.path}`} stroke={`${props.color}`} strokeWidth={`${props.stroke/10}`}/>\n        <rect x={bounds.minx-1} y={bounds.miny-1} width={bounds.maxx - bounds.minx+1} height={bounds.maxy- bounds.miny+1} style={{fill:'none',stroke:'lightblue',strokeWidth:\"2px\",strokeOpacity:props.active?1:0}} />\n      </svg>\n    </div>\n  );\n}\n\nexport default Spirograph;\n","import React from 'react';\n\nconst buttonTypes={\n  play:{\n    name:\"fa-play text-muted\",\n    command:\"play\"\n  },\n  stop:{\n    name:\"fa-stop text-muted\",\n    command:\"stop\"\n  },\n  delete:{\n    name:\"fa-trash-alt text-danger\",\n    command:\"delete\"\n  }\n}\n\nfunction TileButton(props) {\n  const {name, command} = buttonTypes[props.type];\n  return (\n    <div>\n      <i className={'p-1 fas fas-hover fa-2x rounded-3 ' + name} onClick={(e)=>{props.callback(e, props.tileIndex, command)}}></i>\n    </div>\n  );\n}\n\nexport default TileButton;\n","import React from 'react';\nimport TileButton from './TileButton';\n\nfunction SpiroTile(props) {\nlet re = /[a-z](-?[0-9.]*)\\s(-?[0-9.]*)/gi;\nlet m;\nlet bounds ={\n  minx:999,\n  miny:999,\n  maxx:-999,\n  maxy:-999\n}\n  do {\n      m = re.exec(props.path);\n      if (m) {\n          let x = parseFloat(m[1]);\n          let y = parseFloat(m[2]);\n          if(x > bounds.maxx){\n            bounds.maxx = x;\n          }\n          if(x < bounds.minx){\n            bounds.minx = x;\n          }\n          if(y > bounds.maxy){\n            bounds.maxy = y;\n          }\n          if(y < bounds.miny){\n            bounds.miny = y;\n          }\n      }\n  } while (m);\n  return (\n    <div className={\"row border rounded-3 tile \" + (props.selection===props.tileIndex && 'selectedTile')} onClick={(e)=>{props.callback(e, props.tileIndex, \"select\")}}>\n      <div className=\"col-5 d-none d-lg-block\">\n        <div className=\"row m-1\">\n          <svg \n            className=\"w-100 h-100 p-1 rounded-3\" \n            viewBox={`${bounds.minx-10} ${bounds.miny-10} ${bounds.maxx-bounds.minx+20} ${bounds.maxy - bounds.miny+20}`} \n            fill=\"none\">\n            <path d={`${props.path}`} stroke={`${props.color}`} strokeWidth={`${props.stroke}`}/>\n          </svg>\n        </div>\n      </div>\n      <div className=\"col-lg-7 col-sm-12 col-xs-12 tileContentContainer\">\n        <div className=\"row mt-1 tileTextContainer w-100\">\n          <div className=\"col-12\">\n            <div className=\"row\">\n              <p className=\"text-end\">\n                <span className=\"curveName\"><span className=\"curveText\">Curve </span><span className=\"curveNumber\">{props.name}</span></span>\n\n              </p>\n\n            </div>\n          </div>\n        </div>\n        <div className=\"row mt-2 tileButtonsContainer\">\n          <div className=\"col-12 col-sm-6\">\n            <TileButton type={props.playing?\"stop\": \"play\"} callback={props.callback} tileIndex = {props.tileIndex}/>\n          </div>\n          <div className=\"col-12 col-sm-6\">\n            <TileButton type=\"delete\" callback={props.callback} tileIndex = {props.tileIndex}/>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n  );\n}\n\nexport default SpiroTile;\n","import React from 'react';\nimport CommandButton from './CommandButton';\nimport Parameter from './Parameter';\nimport CurveParameter from './CurveParameter';\nimport ColorParameter from './ColorParameter';\nimport Metric from './Metric';\nimport Spirograph from './Spirograph';\nimport SpiroTile from './SpiroTile';\nimport * as spiroFunctions from './spirofunctions';\n\nclass Canvas extends React.Component {\n  constructor(props){\n    super(props);\n    this.updateParameters = this.updateParameters.bind(this);\n    this.addCurve = this.addCurve.bind(this);\n    this.randomCurve = this.randomCurve.bind(this);\n    this.drawSpiro = this.drawSpiro.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.changeCurve = this.changeCurve.bind(this);\n    this.animateCurve = this.animateCurve.bind(this);\n    this.stopAnimation = this.stopAnimation.bind(this);\n    this.deleteCurve = this.deleteCurve.bind(this);\n    this.clearCanvas = this.clearCanvas.bind(this);\n    this.saveCanvas = this.saveCanvas.bind(this);\n  }\n  state = {\n      curveList: [],\n      activeCurve: 0\n  }\n  handleClick(e,index, command){\n    ;\n    switch (command){\n      case \"select\":\n        if(e.target instanceof HTMLDivElement){\n          this.changeCurve(index);\n        }\n        break;\n      case \"play\":\n        this.animateCurve(index);\n        break;\n      case \"stop\":\n        this.stopAnimation(index);\n        break;\n      case \"delete\":\n        this.deleteCurve(index);\n        break;\n      default:\n        break;\n    }\n  }\n  animateCurve(index){\n    this.updateParameters(\"animPlaying\", true);\n    const animTime = this.state.curveList[index].params.animation;\n    const pathObject = document.querySelector(`.spiro:nth-child(${index+1}) svg path`);\n      const length = pathObject.getTotalLength();\n      const baseStyle ={\n        strokeDasharray: `${length}px`,\n        strokeDashoffset: `-${length}px`,\n      }\n      const animationStyle ={\n        strokeDashoffset: 0,\n        transition: `stroke-dashoffset ${animTime}s linear`\n      }\n      Object.assign(pathObject.style, baseStyle);\n      setTimeout(function(){ \n        Object.assign(pathObject.style, animationStyle)\n      }, 200);\n      setTimeout(() =>{\n        pathObject.removeAttribute('style');\n        this.updateParameters(\"animPlaying\", false);\n      },animTime * 1000 + 200)      \n  }\n  stopAnimation(index){\n    const pathObject = document.querySelector(`.spiro:nth-child(${index+1}) svg path`);\n    pathObject.removeAttribute('style');\n    this.updateParameters(\"animPlaying\", false);\n  }\n  updateParameters(parameter, value){\n    let curveArray = [...this.state.curveList];\n    let modifiedCurve = curveArray[this.state.activeCurve];\n    if(parameter===\"x\" || parameter===\"y\"){\n      modifiedCurve.params[parameter] += value;\n    }\n    else{\n      modifiedCurve.params[parameter] = value;\n    }\n    \n    modifiedCurve.path =spiroFunctions.generateSpiroPath(modifiedCurve.params);\n    curveArray[this.state.activeCurve] = modifiedCurve;\n    this.setState((prevState)=>({\n      curveList: curveArray\n    }))\n  }\n  addCurve(){\n    let params = spiroFunctions.randomParams();\n    this.drawSpiro(params);\n    this.setState((prevState)=>({\n      activeCurve: prevState.curveList.length-1\n    }))\n  }\n  deleteCurve(index){\n    let curveArray = [...this.state.curveList];\n    curveArray.splice(index,1);\n    this.setState((prevState)=>({\n      curveList: curveArray\n    }))\n    this.changeCurve(null)\n  }\n  changeCurve(index){\n    this.setState((prevState) => ({\n      activeCurve:prevState.activeCurve===index?null:index\n    }))\n  }\n  clearCanvas(){\n    this.setState((prevState)=>({\n      curveList: []\n    }))\n    this.changeCurve(null)\n  }\n  saveCanvas(){\n    let curveArray = [...this.state.curveList];\n    let parent = document.createElement(\"div\");\n    var svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    svg.setAttribute(\"fill\", 'none');\n    svg.setAttribute(\"xmlns\", 'http://www.w3.org/2000/svg');\n    let re = /[a-z](-?[0-9.]*)\\s(-?[0-9.]*)/gi;\n    let m;\n    let bounds ={\n      minx:999,\n      miny:999,\n      maxx:-999,\n      maxy:-999\n    }\n    curveArray.forEach((modifiedCurve, index)=>{\n      let pathElement = document.querySelector(`#canvasContainer .spiro:nth-child(${index+1}) svg path`).cloneNode(true);\n      svg.appendChild(pathElement);\n      do {\n        m = re.exec(pathElement.attributes.d.value);\n        if (m) {\n            let x = parseFloat(m[1]);\n            let y = parseFloat(m[2]);\n            if(x > bounds.maxx){\n              bounds.maxx = x;\n            }\n            if(x < bounds.minx){\n              bounds.minx = x;\n            }\n            if(y > bounds.maxy){\n              bounds.maxy = y;\n            }\n            if(y < bounds.miny){\n              bounds.miny = y;\n            }\n        }\n    } while (m);\n    })\n    svg.setAttribute(\"width\",`${bounds.maxx-bounds.minx+200}`);\n    svg.setAttribute(\"height\",`${bounds.maxy - bounds.miny+200}`); \n    svg.setAttribute('viewBox',`${bounds.minx-100} ${bounds.miny-100} ${bounds.maxx-bounds.minx+200} ${bounds.maxy - bounds.miny+200}`);\n    parent.appendChild(svg);\n    const blob = new Blob([parent.innerHTML.toString()]);\n    const element = document.createElement(\"a\");\n    element.download = \"Spirograher Canvas.svg\";\n    element.href = window.URL.createObjectURL(blob);\n    element.click();\n    element.remove();\n  }\n  randomCurve(){\n    let randomParams = spiroFunctions.randomParams();\n    let curveArray = [...this.state.curveList];\n    let modifiedCurve = curveArray[this.state.activeCurve];\n    modifiedCurve.params = randomParams;\n    modifiedCurve.path =spiroFunctions.generateSpiroPath(randomParams);\n    curveArray[this.state.activeCurve] = modifiedCurve;\n    this.setState((prevState)=>({\n      curveList: curveArray\n    }))\n  }\n  drawSpiro(drawParams){\n    let newSVG = spiroFunctions.generateSpiroPath(drawParams);\n    this.setState((prevState) => ({\n      curveList: [...prevState.curveList, {'params': drawParams, 'path':newSVG}]\n    }))\n  }\n  componentDidMount(){\n    let randomParams = spiroFunctions.randomParams();\n    this.drawSpiro(randomParams)\n  }\n  render() {\n    var params = {\n      r1: 0,\n      r2: 0,\n      distance: 0,\n      rotation: 0,\n      ppc: 0,\n      animation: 5,\n      animPlaying: false,\n      curveType:\"epi\",\n      scale:1,\n      color:'#010101', //Not exactly black because Windows color picker is bugged and won't trigger onChange events\n      stroke: 1,\n      x: 0,\n      y: 0\n    };\n    if(this.state.curveList[this.state.activeCurve]!== undefined){\n    ({params} = this.state.curveList[this.state.activeCurve]);\n    }\n    return (\n      <div className=\"container-xl vh-100 p-3\">\n        <div className=\"row h-100\">\n          <div className=\"col-2 col-xl-3 order-1 order-sm1\">\n            <div id=\"tileContainer\">\n              {this.state.curveList.map((spiro, index) => \n                <SpiroTile \n                  key={index+1} \n                  name={`${index+1}`} \n                  path={spiro.path}\n                  tileIndex = {index}\n                  selection={this.state.activeCurve}\n                  callback={this.handleClick}\n                  playing={spiro.params.animPlaying}\n                  color={spiro.params.color}\n                  stroke={spiro.params.stroke}\n                  />)}\n            </div>\n          </div>\n          <div className=\"col-7 col-xl-6 order-2 order-sm-2\">\n            <div id=\"outputContainer\" className=\"d-none\">\n\n            </div>\n            <div id=\"canvasContainer\" className=\"border overflow-hidden position-relative h-100\">\n              \n                {this.state.curveList.map((spiro, index) => \n                <Spirograph \n                  key={index} \n                  path={spiro.path} \n                  selected={this.state.activeCurve+1}\n                  active={this.state.activeCurve===index?true:false}\n                  color={spiro.params.color}\n                  stroke={spiro.params.stroke}\n                  callback={this.updateParameters}\n                />)}\n            </div>\n          </div>\n          <div className=\"col-sm-3 col-12 order-0 order-sm-3\">\n            <div id=\"parameterPanel\" className=\"bg-light row\">\n              <Parameter type='r1' callback={this.updateParameters} value={params.r1} disabled={this.state.activeCurve===null?true:false}/>\n              <Parameter type='r2' callback={this.updateParameters} value={params.r2} disabled={this.state.activeCurve===null?true:false}/>\n              <Parameter type='distance' callback={this.updateParameters} value={params.distance} disabled={this.state.activeCurve===null?true:false}/>\n              <Parameter type='scale' callback={this.updateParameters} value={params.scale} disabled={this.state.activeCurve===null?true:false}/>\n              <CurveParameter type='curveType'  callback={this.updateParameters} value={params.curveType} disabled={this.state.activeCurve===null?true:false}/>\n              <Parameter type='stroke' callback={this.updateParameters} value={params.stroke} disabled={this.state.activeCurve===null?true:false}/>\n              <ColorParameter  type='color' callback={this.updateParameters} value={params.color} disabled={this.state.activeCurve===null?true:false}/>\n            </div>\n            <div className=\"row\">\n              <a href=\"#advanced\" data-bs-toggle=\"collapse\" aria-expanded=\"false\" aria-controls=\"multiCollapseExample1\">Advanced Settings</a>            </div>\n            <div id=\"advanced\" className=\"collapse multi-collapse\">\n              <div className=\"row\">\n                <Parameter type='rotation' callback={this.updateParameters} value={params.rotation} disabled={this.state.activeCurve===null?true:false}/>\n                <Parameter type='ppc' callback={this.updateParameters} value={params.ppc} disabled={this.state.activeCurve===null?true:false}/>\n                <Parameter type='animation' callback={this.updateParameters} value={params.animation} disabled={this.state.activeCurve===null?true:false}/>\n                <Metric params={params} type=\"GCD\"/>\n              </div>\n            </div>\n            <div id=\"buttonPanel\" className=\"mt-3\">\n              <div className=\"row\">\n                <CommandButton buttonType='randomize' callback={this.randomCurve}/>\n                <CommandButton buttonType='add' callback={this.addCurve}/>\n                <CommandButton buttonType='clear' callback={this.clearCanvas}/>\n                <CommandButton buttonType='save' callback={this.saveCanvas}/>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n      </div>\n      \n      \n    );\n  }\n}\n \nexport default Canvas;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Canvas from './Canvas';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Canvas/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}