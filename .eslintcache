[{"E:\\Programming\\React Practice\\spirographer\\src\\index.js":"1","E:\\Programming\\React Practice\\spirographer\\src\\reportWebVitals.js":"2","E:\\Programming\\React Practice\\spirographer\\src\\Canvas.js":"3","E:\\Programming\\React Practice\\spirographer\\src\\CommandButton.js":"4","E:\\Programming\\React Practice\\spirographer\\src\\spirofunctions.js":"5","E:\\Programming\\React Practice\\spirographer\\src\\Parameter.js":"6","E:\\Programming\\React Practice\\spirographer\\src\\Spirograph.js":"7","E:\\Programming\\React Practice\\spirographer\\src\\SpiroTile.js":"8","E:\\Programming\\React Practice\\spirographer\\src\\TileButton.js":"9","E:\\Programming\\React Practice\\spirographer\\src\\Metric.js":"10"},{"size":508,"mtime":1607938919164,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":6451,"mtime":1608050224361,"results":"14","hashOfConfig":"12"},{"size":476,"mtime":1607975492779,"results":"15","hashOfConfig":"12"},{"size":1877,"mtime":1608049259590,"results":"16","hashOfConfig":"12"},{"size":1708,"mtime":1608048985229,"results":"17","hashOfConfig":"12"},{"size":313,"mtime":1608026470848,"results":"18","hashOfConfig":"12"},{"size":1831,"mtime":1608050115241,"results":"19","hashOfConfig":"12"},{"size":510,"mtime":1608049588733,"results":"20","hashOfConfig":"12"},{"size":357,"mtime":1608048267075,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"17g1iyr",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"E:\\Programming\\React Practice\\spirographer\\src\\index.js",[],["44","45"],"E:\\Programming\\React Practice\\spirographer\\src\\reportWebVitals.js",[],"E:\\Programming\\React Practice\\spirographer\\src\\Canvas.js",[],"E:\\Programming\\React Practice\\spirographer\\src\\CommandButton.js",[],"E:\\Programming\\React Practice\\spirographer\\src\\spirofunctions.js",[],"E:\\Programming\\React Practice\\spirographer\\src\\Parameter.js",["46"],"import React, {useState, useEffect} from 'react';\n\nconst parameterData={\n  'r1':{\n    text:\"Radius 1\",\n    desc:\"Radius of first gear\",\n    max: 300\n  },\n  'r2':{\n    text:\"Radius 2\",\n    desc:\"Radius of second gear\",\n    max: 300,\n  },\n  'distance':{\n    text:\"Distance\",\n    desc:\"Distance of drawing point from center of gear\",\n    max: 300,\n  },\n  'rotation':{\n    text:\"Rotation\",\n    desc:\"Initial rotation of curve\",\n    max: 360,\n  },\n  'ppc':{\n    text:\"Points\",\n    desc:\"Points per curve\",\n    max: 200,\n  },\n  'animation':{\n    text:\"Animation Time\",\n    desc:\"Length of time the draw animation lasts\",\n    max: 60,\n  }\n}\n\nfunction Parameter(props) {\n  const [stateValue, setValue] = useState(props.value);\n  const {text, desc, max} = parameterData[props.type];\n\n  useEffect(() => {\n    setValue(props.value)\n  }, [props.value])\n\n  function updateParameter(e){\n    if(e.target.value > max){\n      e.target.value = max;\n    }\n    if(e.target.value < 0){\n      e.target.value = 0;\n    }\n    setValue(e.target.value);\n    props.callback(props.type, parseInt(e.target.value));\n  }\n  return (\n    <div className=\"mb-3\">\n      <div className=\"row\">\n        <div className=\"col-8\">\n          <label htmlFor={props.type + \"Input\"} className=\"col-form-label\">{text}</label>\n        </div>\n        <div className=\"col-4\">\n          <input type=\"number\" id={props.type + \"Input\"} min=\"0\" max={max} className=\"form-control\" onChange={updateParameter} value={stateValue}/>\n        </div>\n      </div>\n      <div className=\"row\">\n          <input type=\"range\" id={props.type + \"Range\"} min=\"0\" max={max} onChange={updateParameter} value={stateValue}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Parameter;\n","E:\\Programming\\React Practice\\spirographer\\src\\Spirograph.js",[],"E:\\Programming\\React Practice\\spirographer\\src\\SpiroTile.js",[],"E:\\Programming\\React Practice\\spirographer\\src\\TileButton.js",[],"E:\\Programming\\React Practice\\spirographer\\src\\Metric.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":38,"column":16,"nodeType":"53","messageId":"54","endLine":38,"endColumn":20},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'desc' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]